{
  "service": {
    "service": "app",
    "serviceObject": {
      "name": "app"
    },
    "provider": {
      "name": "aws",
      "region": "ap-south-1",
      "runtime": "provided.al2",
      "layers": [
        "arn:aws:lambda:ap-south-1:209497400698:layer:php-81:29"
      ],
      "httpApi": {
        "cors": true
      },
      "environment": {
        "API_GATEWAY_ID": {
          "Ref": "WebsocketsApi"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": [
            {
              "Fn::Sub": "${WebsocketConnections.Arn}"
            },
            {
              "Fn::Sub": "${WebsocketConnections.Arn}/*"
            }
          ]
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "WebsocketLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/app-dev-websocket"
            }
          },
          "DispatcherLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/app-dev-dispatcher"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "app",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "WebsocketLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/app/dev/1667124485854-2022-10-30T10:08:05.854Z/app.zip"
              },
              "Handler": "socHandler.php",
              "Runtime": "provided.al2",
              "FunctionName": "app-dev-websocket",
              "MemorySize": 512,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "API_GATEWAY_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"API_GATEWAY_ID\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:ap-south-1:209497400698:layer:php-81:29"
              ]
            },
            "DependsOn": [
              "WebsocketLogGroup"
            ]
          },
          "DispatcherLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/app/dev/1667124485854-2022-10-30T10:08:05.854Z/app.zip"
              },
              "Handler": "snsHandler.php",
              "Runtime": "provided.al2",
              "FunctionName": "app-dev-dispatcher",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "API_GATEWAY_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"API_GATEWAY_ID\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:ap-south-1:209497400698:layer:php-81:29"
              ]
            },
            "DependsOn": [
              "DispatcherLogGroup"
            ]
          },
          "WebsocketLambdaVersionbqNLb45jKjBHIbicI9GLd5r4U5djYrOLGwilPUgM9I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebsocketLambdaFunction"
              },
              "CodeSha256": "990tob89KBY2D9Jcw0XF0GFGWNHwvjR7913plYG1hoI="
            }
          },
          "DispatcherLambdaVersionEylqcnugcXWpJYB5JdP5owlLG6uHAKruZcHX5T39k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DispatcherLambdaFunction"
              },
              "CodeSha256": "990tob89KBY2D9Jcw0XF0GFGWNHwvjR7913plYG1hoI="
            }
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-app-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "WebsocketWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "WebsocketLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "WebsocketLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "WebsocketLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebsocketLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdefaultWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$default",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "WebsocketWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId": {
                "Ref": "WebsocketsDeploymentNRwvWQ0Jbn7ItuMjU1dEbPskaqXcjUHYJCtmYRx4"
              }
            }
          },
          "WebsocketsDeploymentNRwvWQ0Jbn7ItuMjU1dEbPskaqXcjUHYJCtmYRx4": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "SdefaultWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "SNSTopicStatusUpdate": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "statusUpdate",
              "Subscription": [
                {
                  "Endpoint": {
                    "Fn::GetAtt": [
                      "DispatcherLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Protocol": "lambda"
                }
              ]
            }
          },
          "DispatcherLambdaPermissionStatusUpdateSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DispatcherLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":sns:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "statusUpdate"
                  ]
                ]
              }
            }
          },
          "WebsocketConnections": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "soc_connections",
              "AttributeDefinitions": [
                {
                  "AttributeName": "connectionId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "connectionId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-app-dev-ServerlessDeploymentBucketName"
            }
          },
          "WebsocketLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebsocketLambdaVersionbqNLb45jKjBHIbicI9GLd5r4U5djYrOLGwilPUgM9I"
            },
            "Export": {
              "Name": "sls-app-dev-WebsocketLambdaFunctionQualifiedArn"
            }
          },
          "DispatcherLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DispatcherLambdaVersionEylqcnugcXWpJYB5JdP5owlLG6uHAKruZcHX5T39k"
            },
            "Export": {
              "Name": "sls-app-dev-DispatcherLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-app-dev-ServiceEndpointWebsocket"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "bref": {}
    },
    "plugins": [
      "./vendor/bref/bref"
    ],
    "pluginsData": {},
    "functions": {
      "websocket": {
        "handler": "socHandler.php",
        "memorySize": 512,
        "events": [
          {
            "websocket": "$connect"
          },
          {
            "websocket": "$disconnect"
          },
          {
            "websocket": "$default"
          }
        ],
        "name": "app-dev-websocket",
        "package": {},
        "memory": 512,
        "timeout": 6,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "WebsocketLambdaVersionbqNLb45jKjBHIbicI9GLd5r4U5djYrOLGwilPUgM9I"
      },
      "dispatcher": {
        "handler": "snsHandler.php",
        "events": [
          {
            "sns": "statusUpdate"
          }
        ],
        "name": "app-dev-dispatcher",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "DispatcherLambdaVersionEylqcnugcXWpJYB5JdP5owlLG6uHAKruZcHX5T39k"
      }
    },
    "resources": {
      "Resources": {
        "WebsocketConnections": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "soc_connections",
            "AttributeDefinitions": [
              {
                "AttributeName": "connectionId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "connectionId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "app",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "exclude": [
          "website/**"
        ],
        "artifactsS3KeyDirname": "serverless/app/dev/code-artifacts",
        "artifact": "/Users/vivek/Sites/my/lambda/.serverless/app.zip",
        "artifactDirectoryName": "serverless/app/dev/1667124485854-2022-10-30T10:08:05.854Z"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/vivek/Sites/my/lambda/.serverless/app.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/app/dev/1667124485854-2022-10-30T10:08:05.854Z",
    "artifact": "app.zip"
  }
}